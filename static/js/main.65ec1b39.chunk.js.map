{"version":3,"sources":["hooks/alert.jsx","hooks/theme.jsx","services/http.js","services/hive.js","services/communities.js","services/account.js","hooks/data.jsx","components/Button.jsx","components/Dropdown.jsx","hooks/utility.jsx","components/Nav.jsx","components/Info.jsx","pages/Home.jsx","pages/Community.jsx","pages/Profile.jsx","pages/Post.jsx","App.jsx","components/Alert.jsx","index.jsx"],"names":["AlertContext","React","createContext","alerts","showAlert","title","message","removeAlert","id","alertReducer","state","action","type","length","filter","AlertProvider","children","useReducer","dispatch","useEffect","timer","setTimeout","clearTimeout","Provider","value","useAlert","useContext","getInitialColorMode","persistedColorPreference","window","localStorage","getItem","mql","matchMedia","matches","ThemeContext","colorMode","undefined","setColorMode","ThemeProvider","useState","setColorModeState","document","documentElement","setAttribute","setDocumentColorMode","setItem","method","params","a","fetch","process","body","JSON","stringify","jsonrpc","resp","ok","Error","statusText","json","data","error","result","hiveClient","Client","HTTP","post","limit","communities","map","key","name","hivemind","getCommunity","sort","tag","posts","permlink","author","REACT_APP_HIVE_USER","REACT_APP_HIVE_POSTING","unfollow","follower","following","broadcast","required_posting_auths","required_auths","what","PrivateKey","from","useGetCommunities","setCommunities","loading","setLoading","setError","getPopularCommunities","then","catch","finally","useGetCommunity","communityName","community","setCommunity","useGetCommunityPosts","setPosts","getCommunityPosts","useGetPost","setPost","getPost","useGetAccount","account","setAccount","database","getAccounts","acc","useGetFollowing","setFollowing","http","getFollowing","console","log","Button","forwardRef","ref","active","onClick","rest","className","classNames","Dropdown","label","items","open","setOpen","menuRef","useRef","btnRef","createRef","handler","ignoreRefs","listener","event","current","contains","target","some","ir","addEventListener","removeEventListener","useOnClickOutside","link","to","Nav","history","useHistory","push","Info","info","setInfo","blockchain","getBlocks","block_id","block","witness","server_time","Date","timestamp","toUTCString","transactions","transaction_ids","useBlockInfo","Object","keys","toUpperCase","Home","Community","useParams","postsLoading","about","subscribers","post_id","Profile","followersLoading","follow","err","Post","category","postAuthor","filteredCommunities","dangerouslySetInnerHTML","__html","marked","App","Fragment","path","exact","component","Alert","onClose","AlertOutlet","ReactDOM","createPortal","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.65ec1b39.chunk.js","sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\n\nconst ALERT_LIFETIME = 5 * 1000;\n\nconst AlertContext = React.createContext({\n  alerts: [],\n  showAlert: (title, message) => null,\n  removeAlert: (id) => null,\n});\n\nfunction alertReducer(state, action) {\n  switch (action.type) {\n    // create new alert\n    case \"add\":\n      return [\n        ...state,\n        { id: state.length + 1, message: action.message, title: action.title },\n      ];\n    // remove existing alert\n    case \"remove\":\n      return state.filter(({ id }) => id !== action.id);\n    default:\n      return state;\n  }\n}\n\nconst AlertProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, []);\n\n  const showAlert = (title, message) => {\n    dispatch({ type: \"add\", title, message });\n  };\n\n  const removeAlert = (id) => {\n    dispatch({ type: \"remove\", id });\n  };\n\n  // automatically destroy alert each 3 seconds\n  useEffect(() => {\n    let timer;\n    if (state.length) {\n      timer = setTimeout(() => {\n        removeAlert(state[0].id);\n      }, ALERT_LIFETIME);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [state]);\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        showAlert,\n        removeAlert,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  );\n};\n\nconst useAlert = () => useContext(AlertContext);\n\nexport { AlertProvider, useAlert };\n","import React, { useState, useEffect, useContext } from \"react\";\n\nexport function getInitialColorMode() {\n  const persistedColorPreference = window.localStorage.getItem(\"color-mode\");\n  const hasPersistedPreference = typeof persistedColorPreference === \"string\";\n  // If the user has explicitly chosen light or dark,\n  // let's use it. Otherwise, this value will be null.\n  if (hasPersistedPreference) {\n    return persistedColorPreference;\n  }\n  // If they haven't been explicit, let's check the media\n  // query\n  const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const hasMediaQueryPreference = typeof mql.matches === \"boolean\";\n  if (hasMediaQueryPreference) {\n    return mql.matches ? \"dark\" : \"light\";\n  }\n  // If they are using a browser/OS that doesn't support\n  // color themes, let's default to 'light'.\n  return \"light\";\n}\n\nexport function setDocumentColorMode(colorMode) {\n  document.documentElement.setAttribute(\"class\", colorMode);\n}\n\nconst ThemeContext = React.createContext({\n  colorMode: undefined, // light | dark | undefined (system's default),\n  setColorMode: () => null,\n});\n\nconst ThemeProvider = ({ children }) => {\n  const [colorMode, setColorModeState] = useState();\n\n  useEffect(() => {\n    setColorModeState(getInitialColorMode());\n  }, []);\n\n  const setColorMode = (value) => {\n    setDocumentColorMode(value);\n    setColorModeState(value);\n    window.localStorage.setItem(\"color-mode\", value);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ colorMode, setColorMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nconst useTheme = () => useContext(ThemeContext);\n\nexport { ThemeProvider, useTheme };\n","const API_URL = process.env.REACT_APP_HIVE_API_URL;\n\nclass HTTP {\n  async post(method, params) {\n    const resp = await fetch(API_URL, {\n      method: \"POST\",\n      body: JSON.stringify({\n        id: 1,\n        jsonrpc: \"2.0\",\n        params,\n        method,\n      }),\n    });\n\n    if (!resp.ok) throw new Error(`Post request failed: ${resp.statusText}`);\n\n    const data = await resp.json();\n\n    if (data.error) throw new Error(data.error.message);\n\n    return data.result;\n  }\n}\n\nexport default new HTTP();\n","import { Client } from \"@hiveio/dhive\";\n\nconst { REACT_APP_HIVE_API_URL } = process.env;\n\nexport const hiveClient = new Client([REACT_APP_HIVE_API_URL]);\n\nexport function getBlocks() {\n  return hiveClient.blockchain.getBlocks();\n}\n","import HTTP from \"./http\";\nimport { hiveClient } from \"./hive\";\n\nexport async function getPopularCommunities() {\n  const communities = await HTTP.post(\"bridge.list_pop_communities\", {\n    limit: 10,\n  });\n  return communities.map(([key, title]) => ({ key, title }));\n}\n\nexport async function getCommunity(name) {\n  return hiveClient.hivemind.getCommunity({\n    name,\n  });\n}\n\nexport async function getCommunityPosts(name) {\n  const posts = await HTTP.post(\"bridge.get_ranked_posts\", {\n    limit: 10,\n    sort: \"trending\",\n    tag: name,\n  });\n\n  return posts;\n}\n\nexport async function getPost({ permlink, author }) {\n  const post = await HTTP.post(\"bridge.get_post\", {\n    author,\n    permlink,\n  });\n\n  return post;\n}\n","import { PrivateKey } from \"@hiveio/dhive\";\nimport { hiveClient } from \"./hive\";\nimport http from \"./http\";\n\nconst { REACT_APP_HIVE_USER, REACT_APP_HIVE_POSTING } = process.env;\n\nexport function getAccount() {\n  return hiveClient.database.getAccounts([REACT_APP_HIVE_USER]);\n}\n\nexport function getFollowing(account) {\n  return http.post(\"condenser_api.get_following\", [account, null, \"blog\"]);\n}\n\nconsole.log(REACT_APP_HIVE_POSTING);\n\nexport function follow(follower, following) {\n  return hiveClient.broadcast.json(\n    {\n      id: \"follow\",\n      required_posting_auths: [REACT_APP_HIVE_USER],\n      required_auths: [],\n      json: JSON.stringify([\"follow\", { follower, following, what: [\"blog\"] }]),\n    },\n    PrivateKey.from(REACT_APP_HIVE_POSTING)\n  );\n}\n\nexport function unfollow(follower, following) {\n  return hiveClient.broadcast.json(\n    {\n      id: \"unfollow\",\n      required_posting_auths: [REACT_APP_HIVE_USER],\n      required_auths: [],\n      json: JSON.stringify([\"unfollow\", { follower, following, what: [\"blog\"] }]),\n    },\n    PrivateKey.from(REACT_APP_HIVE_POSTING)\n  );\n}\n\nunfollow(REACT_APP_HIVE_USER, \"tattoodjay\");\n\n","import { useEffect, useState } from \"react\";\nimport {\n  getPopularCommunities,\n  getCommunity,\n  getCommunityPosts,\n  getPost,\n} from \"../services/communities\";\nimport { getBlocks } from \"../services/hive\";\nimport { getAccount, getFollowing } from \"../services/account\";\n\n// Get trending communities\nexport function useGetCommunities() {\n  const [communities, setCommunities] = useState([]);\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPopularCommunities()\n      .then(setCommunities)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return { communities, loading, error };\n}\n\n// Get community by name\nexport function useGetCommunity(communityName) {\n  const [community, setCommunity] = useState({});\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCommunity(communityName)\n      .then(setCommunity)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [communityName]);\n\n  return { community, loading, error };\n}\n\n// Get trending posts for community\nexport function useGetCommunityPosts(communityName) {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCommunityPosts(communityName)\n      .then(setPosts)\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [communityName]);\n\n  // dependent on communityName\n  if (!communityName) return [];\n\n  return { posts, loading, error };\n}\n\n// Get single post\nexport function useGetPost({ author, permlink }) {\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getPost({ author, permlink })\n      .then(setPost)\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [author, permlink]);\n\n  return { post, loading, error };\n}\n\n// Get blockchain info data\nexport function useBlockInfo() {\n  const [info, setInfo] = useState();\n\n  useEffect(() => {\n    (async () => {\n      for await (const block of getBlocks()) {\n        setInfo({\n          block_id: block.block_id,\n          witness: block.witness,\n          server_time: new Date(block.timestamp).toUTCString(),\n          transactions: block.transaction_ids.length,\n        });\n      }\n    })();\n  }, []);\n\n  return info;\n}\n\n// Get account\nexport function useGetAccount() {\n  const [account, setAccount] = useState({});\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getAccount()\n      .then((acc) => setAccount(acc[0]))\n      .catch(setError)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return { account, loading, error };\n}\n\n// Get account\nexport function useGetFollowing(account) {\n  const [following, setFollowing] = useState([]);\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (account) {\n      getFollowing(account)\n        .then(setFollowing)\n        .catch(setError)\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [account]);\n\n  return { following, loading, error };\n}\n","import { forwardRef } from \"react\";\nimport classNames from \"classnames\";\n\nconst Button = forwardRef(({ active, children, onClick, ...rest }, ref) => (\n  <button\n    ref={ref}\n    className={classNames(\n      `hover:bg-gray-800\n      hover:text-gray-200\n      dark:hover:bg-gray-200\n      dark:hover:text-gray-800\n      p-2\n      rounded-lg\n      font-semibold\n      text-lg`,\n      {\n        \"dark:bg-gray-100\": active,\n        \"dark:text-gray-700\": active,\n        \"bg-gray-700\": active,\n        \"text-gray-100\": active,\n      }\n    )}\n    onClick={onClick}\n    {...rest}\n  >\n    {children}\n  </button>\n));\n\nexport default Button;\n","import { createRef, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useOnClickOutside } from \"../hooks/utility\";\nimport Button from \"./Button\";\n\nconst Dropdown = ({ label, items = []}) => {\n  const [open, setOpen] = useState(false);\n  const menuRef = useRef();\n  const btnRef = createRef();\n\n  useOnClickOutside(\n    menuRef,\n    () => {\n      setOpen(false);\n    },\n    [btnRef]\n  );\n\n  return (\n    <div className=\"mx-2 relative\">\n      <Button ref={btnRef} active={open} onClick={() => setOpen(!open)}>\n        {label}\n      </Button>\n\n      {open && (\n        <ul\n          ref={menuRef}\n          className=\"absolute top-12 left-0 right-0 bg-gray-700 text-gray-100 dark:text-gray-800 dark:bg-white rounded-lg\"\n        >\n          {items.map(({ label, link }) => (\n            <li className=\"p-2 font-semibold hover:opacity-75\" key={label} onClick={() => setOpen(false)}>\n              <Link to={link}>{label}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref, handler, ignoreRefs = []) {\n  useEffect(\n    () => {\n      const listener = (event) => {\n        // Do nothing if clicking ref's element or descendent elements or \n        // element is in the ignored refs list\n        if (\n          !ref.current ||\n          ref.current.contains(event.target) ||\n          ignoreRefs.some((ir) => ir.current.contains(event.target))\n        ) {\n          return;\n        }\n        handler(event);\n      };\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n\n    // ignoreRefs used for avoiding some elements\n    [ref, handler, ignoreRefs]\n  );\n}\n","import { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { SunIcon, MoonIcon, RefreshIcon } from \"@heroicons/react/outline\";\nimport classNames from \"classnames\";\nimport { useAlert } from \"../hooks/alert\";\nimport { useTheme } from \"../hooks/theme\";\nimport { useGetCommunities } from \"../hooks/data\";\nimport Button from \"./Button\";\nimport Dropdown from \"./Dropdown\";\n\nconst Nav = () => {\n  const history = useHistory();\n  const { colorMode, setColorMode } = useTheme();\n  const { showAlert } = useAlert();\n\n  const { communities, loading, error } = useGetCommunities();\n\n  useEffect(() => {\n    if (error) {\n      showAlert(\"Error when getting communities!\", error.message);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  return (\n    <nav className=\"flex justify-between items-center my-8\">\n      <div className=\"flex\">\n        {/* Brand */}\n        <span\n          className=\"text-3xl font-semibold mr-4 text-red-500 cursor-pointer\"\n          onClick={() => history.push(\"/\")}\n        >\n          Hive Social Network\n        </span>\n        \n        {/* Menu Items */}\n        <Dropdown\n          label={\n            <span\n              className={classNames(\"flex items-center\", {\n                \"opacity-60\": loading,\n                \"pointer-events-none\": loading,\n                \"cursor-wait\": loading\n              })}\n            >\n              Trending Communities\n              {loading && <RefreshIcon className=\"h-5 w-5 ml-2 animate-spin\" />}\n            </span>\n          }\n          items={communities.map(({ key, title }) => ({\n            label: title,\n            link: `/trending-communities/${key}`,\n          }))}\n        />\n\n        <Button>\n          <Link to=\"/profile\">Profile</Link>\n        </Button>\n      </div>\n\n      <button\n        onClick={() => {\n          if (colorMode === \"dark\") {\n            setColorMode(\"light\");\n            showAlert(\"Theme changed\", `Just shine like a diamond ☀️`);\n          } else {\n            setColorMode(\"dark\");\n            showAlert(\"Theme changed\", `You can't escape from the darkness 🌚`);\n          }\n        }}\n      >\n        {colorMode === \"dark\" && (\n          <SunIcon className=\"h-10 w-10 text-yellow-300\" />\n        )}\n        {colorMode === \"light\" && (\n          <MoonIcon className=\"h-10 w-10 text-indigo-900\" />\n        )}\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { RefreshIcon } from \"@heroicons/react/outline\";\nimport { useBlockInfo } from \"../hooks/data\";\n\nconst Info = () => {\n  const info = useBlockInfo();\n\n  if (!info) return <span className=\"flex\">Subscribing to Blockchain Info <RefreshIcon className=\"h-5 w-5 ml-2 animate-spin\" /></span>;\n\n  return (\n    <div className=\"flex flex-col\">\n      <h2 className=\"text-3xl mb-4\">Blockchain Info</h2>\n      {Object.keys(info).map((key) => {\n        return (\n          <label key={key} className=\"flex flex-col mb-4 font-semibold text-gray-500\">\n            {key.toUpperCase()}\n            <span className=\"font-normal text-gray-800 dark:text-white\">{info[key]}</span>\n          </label>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useGetCommunities } from \"../hooks/data\";\n\nconst Home = () => {\n  const { communities, loading } = useGetCommunities();\n\n  return (\n    <div className=\"prose dark:text-white\">\n      <h2 className=\"dark:text-gray-50\">Welcome to Hive Social Network Platform!</h2>\n      <h3 className=\"dark:text-gray-200\">Select a community to explore awesome contents 🥳</h3>\n\n      {loading ? (\n        <div>Loading Top 10 Communities...</div>\n      ) : (\n        <ul className=\"flex flex-col\">\n          {communities.map(({ key, title }) => {\n            return (\n              <Link\n                className=\"text-lg dark:text-gray-300\"\n                key={key}\n                to={`/trending-communities/${key}`}\n              >\n                {title}\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import { useParams, Link } from \"react-router-dom\";\nimport { useGetCommunity, useGetCommunityPosts } from \"../hooks/data\";\n\nconst Community = () => {\n  const { communityName } = useParams();\n  const { community, loading, error } = useGetCommunity(communityName);\n\n  const { posts, loading: postsLoading } = useGetCommunityPosts(communityName);\n\n  if (loading) return <span>Loading community...</span>;\n\n  if (error)\n    return (\n      <span>An error occured when loading community: {error.message}</span>\n    );\n  const { title, about, subscribers } = community;\n  return (\n    <div className=\"w-full\">\n      \n      <h2 className=\"dark:text-gray-50 text-3xl\">\n        {title}{\" \"}\n        <small className=\"font-light ml-2\">\n          <i>{subscribers} Subscribers</i>\n        </small>\n      </h2>\n      <p className=\"dark:text-gray-200 my-2\">{about}</p>\n\n      <div className=\"flex flex-col\">\n        {postsLoading ? (\n          <span className=\"text-green-400\">\n            Loading community Posts for {community.title}...\n          </span>\n        ) : (\n          posts.map(({ post_id, title, permlink, author }) => (\n            <div\n              key={post_id}\n              className=\"flex justify-between p-4 my-2 bg-white w-full rounded-lg dark:text-gray-800\"\n            >\n              {title}\n              <button>\n                <Link to={`/trending-communities/posts/${author}/${permlink}`}>Read</Link>\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Community;\n","import { useGetAccount, useGetFollowing } from \"../hooks/data\";\nimport { useAlert } from \"../hooks/alert\";\nimport { unfollow } from \"../services/account\";\n\nconst Profile = () => {\n  const { showAlert } = useAlert();\n  const { account, loading } = useGetAccount();\n  const { following, loading: followersLoading } = useGetFollowing(\n    account?.name\n  );\n\n  if (loading) {\n    return <span className=\"text-green-400\">Loading account info</span>;\n  }\n\n  const { name } = account;\n  return (\n    <div>\n      <label className=\"flex text-lg mb-4 font-semibold text-gray-500\">\n        Account name:\n        <span className=\"font-normal text-gray-800 dark:text-white\">\n          {name}\n        </span>\n      </label>\n      <h3 className=\"text-2xl\">Followers </h3>\n      {followersLoading ? (\n        <span className=\"text-green-400\">Loading followers</span>\n      ) : (\n        <ul className=\"w-96\">\n          {following.map((follow) => (\n            <li key={follow.following} className=\"flex justify-between\">\n              {follow.following}\n              <button\n                onClick={() => {\n                  unfollow(name, follow.following)\n                    .then(() => {\n                      showAlert(\n                        \"Unfollow successfull\",\n                        `Successfully unfollowed account ${follow.following}`\n                      );\n                    })\n                    .catch((err) => {\n                      showAlert(\n                        `Couldn't unfollow: ${follow.following}`,\n                        err.message\n                      );\n                    });\n                }}\n              >\n                Unfollow\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import { Link, useParams } from \"react-router-dom\";\nimport marked from \"marked\";\nimport { useGetCommunities, useGetPost } from \"../hooks/data\";\nimport Button from \"../components/Button\";\n\nconst Post = () => {\n  const { author, permlink } = useParams();\n  const { post, loading } = useGetPost({ author, permlink });\n  const { communities } = useGetCommunities();\n\n  const { category, body, title, author: postAuthor } = post;\n\n  const filteredCommunities = communities\n    ? communities.filter(({ key }) => key !== category)\n    : [];\n\n  return (\n    <div className=\" py-2 rounded-lg grid grid-cols-3\">\n      <ul className=\"flex flex-col px-2\">\n        <h2 className=\"text-2xl text-center mb-6\">Check Other Communities</h2>\n        {filteredCommunities.map(({ key, title }) => {\n          return (\n            <Button key={key}>\n              <Link to={`/trending-communities/${key}`}>{title}</Link>\n            </Button>\n          );\n        })}\n      </ul>\n\n      {loading ? (\n        <span className=\"text-green-400\">Loading...</span>\n      ) : (\n        <div className=\"prose dark:bg-gray-50 col-span-2 p-4 rounded-lg max-w-full\">\n          <h3>Author: {postAuthor}</h3>\n          <h1>{title}</h1>\n          <br />\n          <article\n            className=\"prose mx-auto\"\n            dangerouslySetInnerHTML={{ __html: marked(body || \"\") }}\n          ></article>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Nav from \"./components/Nav\";\nimport Info from \"./components/Info\";\nimport Home from \"./pages/Home\";\nimport Community from \"./pages/Community\";\nimport Profile from \"./pages/Profile\";\nimport Post from \"./pages/Post\";\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Nav />\n\n      {/* Routes */}\n      <section className=\"grid grid-cols-4 gap-4\">\n        <main className=\"col-span-3\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/trending-communities/:communityName\" exact component={Community}/>\n            <Route path=\"/trending-communities/posts/:author/:permlink\" exact component={Post}/>\n            <Route\n              path=\"/profile\"\n              exact\n              component={Profile}\n            />\n          </Switch>\n        </main>\n\n        {/* Info section */}\n        <Info />\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { XIcon } from \"@heroicons/react/solid\";\nimport { useAlert } from \"../hooks/alert\";\n\nconst Alert = ({ id, title, message, onClose }) => {\n  return (\n    <div\n      className={`bg-gray-800\n      dark:bg-white\n      dark:text-gray-900\n      text-gray-50\n      flex\n      flex-col\n      p-4\n      w-80\n      rounded-lg\n      my-2 shadow-lg`}\n    >\n      <div className=\"flex justify-between mb-4\">\n        <h4 className=\"text-yellow-300 dark:text-yellow-600\">{title}</h4>\n        <button onClick={() => onClose(id)}>\n          <XIcon className=\"h-6 w-6 text-white dark:text-gray-900\" />\n        </button>\n      </div>\n      {message}\n    </div>\n  );\n};\n\nconst AlertOutlet = () => {\n  const { alerts, removeAlert } = useAlert();\n\n  return ReactDOM.createPortal(\n    alerts.map(({ id, ...rest }) => (\n      <Alert key={id} id={id} onClose={removeAlert} {...rest} />\n    )),\n    document.getElementById(\"alert-container\")\n  );\n};\n\nexport default AlertOutlet;\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { ThemeProvider, getInitialColorMode } from \"./hooks/theme\";\nimport AlertOutlet from \"./components/Alert\";\nimport { AlertProvider } from \"./hooks/alert\";\n\n// get initial color mode to prevent UI flickering\ndocument.documentElement.setAttribute(\"class\", getInitialColorMode());\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AlertProvider>\n        <ThemeProvider>\n          {/* Global Alert Component */}\n          <AlertOutlet />\n\n          {/* App */}\n          <App />\n        </ThemeProvider>\n      </AlertProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}